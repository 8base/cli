// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`As a user, I can use help flag for see help information about \`[ '' ]\`. 1`] = `
"DESCRIPTION
  The 8base Command Line Interface is a unified tool to manage your 8base workspaces services.

USAGE
  8base <command> [OPTIONS]

  Use 8base command \`--help\` for information on a specific command. Use 8base help topics to view a list of available help topics. The synopsis for each command shows its parameters and their usage. Optional options are shown in square brackets.

COMMANDS
  8base backup <command>       Backup commands.
  8base configure              Allows you to select a default workspace and retrieve the API endpoint URL.
  8base deploy                 Deploys project described in 8base.yml config file from your current local directory to 8base server. You must be in the root directory of your local 8base project to use this command.
  8base describe [name]        Describes your 8base project’s functions and their types through 8base.yml file.
  8base environment <command>  Environment commands.
  8base export                 Exports current workspace data schema
  8base generate <command>     Generator for server and client side resources  [aliases: g]
  8base import                 Imports 8base schema file and data to the current - or specified - workspace.
  8base init [name]            Initializes a new project with example directory structure and custom functions.
  8base invoke <name>          Invokes a custom function in the production workspace.
  8base invoke-local <name>    Invokes the custom function in the local development workspace.
  8base login                  Authenticates the command line user by letting them log into an 8base account.
  8base logout                 Clears local login credentials and invalidates API session.
  8base logs <name>            Show logs for the function(s).
  8base migration <command>    Migration commands.
  8base package                Package 8base application without deploying it.
  8base project <command>      Project-related commands.
  8base whoami                 Displays the current authenticated user.

OPTIONS
  -v, --version  Show version number  [boolean]
  -d, --debug    Turn on debug logs  [boolean]
  -h, --help     Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'backup' ]\`. 1`] = `
"8base backup <command>

Backup commands.

COMMANDS
  8base backup create   Creates backup of the environment.
  8base backup list     Lists all the backups of current environment.
  8base backup restore  Restores environment from the backup.

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'backup', 'create' ]\`. 1`] = `
"COMMAND
  8base backup create [OPTIONS]

DESCRIPTION
  Creates backup (snapshot) of the currently selected environment.

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'backup', 'list' ]\`. 1`] = `
"8base backup list

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'backup', 'restore' ]\`. 1`] = `
"8base backup restore [OPTIONS].

OPTIONS
  -d, --debug        Turn on debug logs  [boolean]
  -h, --help         Show help  [boolean]
  -b, --backup       The name of the target backup  [string] [required]
  -e, --environment  Target environment name  [string] [required]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'configure' ]\`. 1`] = `
"COMMAND
  8base configure [OPTIONS]

DESCRIPTION
  Allows you to select a default workspace and retrieve the API endpoint URL.

OPTIONS
  -d, --debug        Turn on debug logs  [boolean]
  -h, --help         Show help  [boolean]
  -w, --workspaceId  The workspace ID of the project  [string]
      --host         The workspace host of the project  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'deploy' ]\`. 1`] = `
"COMMAND
  8base deploy [OPTIONS]

DESCRIPTION
  Deploys project described in 8base.yml config file from your current local directory to 8base server. You must be in the root directory of your local 8base project to use this command.

OPTIONS
  -d, --debug      Turn on debug logs  [boolean]
  -h, --help       Show help  [boolean]
  -p, --plugins    The list of plugins to deploy  [array]
  -f, --functions  The list of functions to deploy  [array]
  -m, --mode       Deploy mode  [string] [choices: "FULL", "ONLY_PLUGINS", "ONLY_PROJECT", "FUNCTIONS", "MIGRATIONS"] [default: "ONLY_PROJECT"]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'describe' ]\`. 1`] = `
"COMMAND
  8base describe [name] [OPTIONS]

DESCRIPTION
  Describes your 8base project’s functions and their types through 8base.yml file.

POSITIONALS
  name  The function name to describe  [string]

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'environment' ]\`. 1`] = `
"8base environment <command>

Environment commands.

COMMANDS
  8base environment branch  Creates branch of the environment.
  8base environment delete  Deletes the environment.
  8base environment list    Lists all the environments of current workspace.
  8base environment set     Allows you to set the environment of your current project
  8base environment show    Displays currently selected environment

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'environment', 'branch' ]\`. 1`] = `
"COMMAND
  8base environment branch

DESCRIPTION
  Creates a new branch (environment) based on your currently selected environment.

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]
  -n, --name   Name of new environment  [string] [required]
  -m, --mode   Branching mode  [string] [choices: "FULL", "SYSTEM"] [default: "FULL"]
  -f, --force  You can specify force flag to branch without prompt."
`;

exports[`As a user, I can use help flag for see help information about \`[ 'environment', 'list' ]\`. 1`] = `
"COMMAND
  8base environment list

DESCRIPTION
  Lists all the environments of current workspace.

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'environment', 'set' ]\`. 1`] = `
"COMMAND
  8base environment set

DESCRIPTION
 Allows you to select and set the environment of your current project

OPTIONS
  -d, --debug            Turn on debug logs  [boolean]
  -h, --help             Show help  [boolean]
  -n, --environmentName  The environment name of the project  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'environment', 'show' ]\`. 1`] = `
"COMMAND
  8base environment show

DESCRIPTION
 Displays current environment.

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'export' ]\`. 1`] = `
"COMMAND
  8base export [OPTIONS]

DESCRIPTION
  Exports current - or specified - workspace data schema to a local file

OPTIONS
  -d, --debug      Turn on debug logs  [boolean]
  -h, --help       Show help  [boolean]
  -f, --file       Destination file  [string] [required]
  -w, --workspace  Custom workspace id  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'generate' ]\`. 1`] = `
"8base generate <command>

Generator for server and client side resources

COMMANDS
  8base generate app <name>            Generates an app skeleton for a specific framework (framework availability: react)
  8base generate mock <name>           8base generate mock <name> [OPTIONS]
  8base generate plugin <name>         Generator for a plugin.
  8base generate resolver <name>       Generator for a custom resolver function.
  8base generate scaffold <tableName>  Generates CRUD screens for a table in a specific framework (framework availability: react)
  8base generate task <name>           Generator for a custom task function.
  8base generate trigger <tableName>   Generator for a custom trigger function.
  8base generate webhook <name>        Generator for a custom webhook function.

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'generate', 'app' ]\`. 1`] = `
"8base generate app <name>

POSITIONALS
  name  The name of the app  [string] [required]

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'generate', 'mock' ]\`. 1`] = `
"Generator for a mock for the function.

POSITIONALS
  name  The name of the function  [string] [required]

OPTIONS
  -d, --debug     Turn on debug logs  [boolean]
  -h, --help      Show help  [boolean]
      --silent    Disable printing extra info to the console  [boolean] [default: false]
  -m, --mockName  Name of the mock request  [string] [default: "request"]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'generate', 'resolver' ]\`. 1`] = `
"8base generate resolver <name> [OPTIONS]

POSITIONALS
  name  The name of the resolver  [string] [required]

OPTIONS
  -d, --debug   Turn on debug logs  [boolean]
  -h, --help    Show help  [boolean]
  -x, --mocks   Included mocks dir and files  [boolean] [default: true]
  -s, --syntax  Syntax for the generated file  [string] [choices: "js", "ts"] [default: "ts"]
      --silent  Disable printing extra info to the console  [boolean] [default: false]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'generate', 'scaffold' ]\`. 1`] = `
"8base generate scaffold <tableName> [OPTIONS]

POSITIONALS
  tableName  The name of the table  [string] [required]

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]
      --depth  Depth of the generated query  [number] [default: 1]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'generate', 'task' ]\`. 1`] = `
"8base generate task <name> [OPTIONS]

POSITIONALS
  name  The name of the task  [string] [required]

OPTIONS
  -d, --debug            Turn on debug logs  [boolean]
  -h, --help             Show help  [boolean]
      --schedule, --sch  Schedule on which the task runs  [string]
  -x, --mocks            Included mocks dir and files  [boolean] [default: true]
  -s, --syntax           Syntax for the generated file  [string] [choices: "js", "ts"] [default: "ts"]
      --silent           Disable printing extra info to the console  [boolean] [default: false]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'generate', 'trigger' ]\`. 1`] = `
"8base generate trigger <tableName> [OPTIONS]

POSITIONALS
  tableName  The name of table to make trigger for  [string] [required]

OPTIONS
  -d, --debug      Turn on debug logs  [boolean]
  -h, --help       Show help  [boolean]
  -t, --type       The trigger type  [string] [choices: "before", "after"] [default: "before"]
  -o, --operation  Operation that invokes the trigger  [string] [choices: "create", "update", "delete", "destroy"] [default: "create"]
  -x, --mocks      Included mocks dir and files  [boolean] [default: true]
  -s, --syntax     Syntax for the generated file  [string] [choices: "js", "ts"] [default: "ts"]
      --silent     Disable printing extra info to the console  [boolean] [default: false]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'generate', 'webhook' ]\`. 1`] = `
"8base generate webhook <name> [OPTIONS]

POSITIONALS
  name  The name of the webhook  [string] [required]

OPTIONS
  -d, --debug   Turn on debug logs  [boolean]
  -h, --help    Show help  [boolean]
  -p, --path    Path for the url (https:<endpoint>/<path>)  [string]
  -m, --method  HTTP verb to invoke the function  [string] [choices: "POST", "GET", "DELETE", "PUT"] [default: "POST"]
  -x, --mocks   Included mocks dir and files  [boolean] [default: true]
  -s, --syntax  Syntax for the generated file  [string] [choices: "js", "ts"] [default: "ts"]
      --silent  Disable printing extra info to the console  [boolean] [default: false]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'import' ]\`. 1`] = `
"COMMAND
  8base import [OPTIONS]

DESCRIPTION
  Imports 8base schema file and data to the current - or specified - workspace.

OPTIONS
  -d, --debug      Turn on debug logs  [boolean]
  -h, --help       Show help  [boolean]
  -f, --file       Path to file with schema  [string] [required]
      --schema     Import schema  [boolean] [default: true]
      --data       Import data  [boolean] [default: true]
  -w, --workspace  Custom workspace id  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'init' ]\`. 1`] = `
"COMMAND
  8base init [name] [OPTIONS]

DESCRIPTION
  Initializes a new project with example directory structure and custom functions.

POSITIONALS
  name  The name of the project  [string]

OPTIONS
  -d, --debug        Turn on debug logs  [boolean]
  -h, --help         Show help  [boolean]
  -f, --functions    List of functions  [array] [default: ["resolver:resolver","task:task","webhook:webhook","trigger:Users:create:before"]]
  -e, --empty        Skip examples  [boolean] [default: false]
  -x, --mocks        Included mocks dir and files  [boolean] [default: true]
  -s, --syntax       Syntax for the generated file  [string] [choices: "js", "ts"] [default: "ts"]
      --silent       Disable printing extra info to the console  [boolean] [default: false]
  -w, --workspaceId  The workspace ID of the project  [string]
      --host         The workspace host of the project  [string] [default: "https://api.8base.com"]

EXAMPLES
  8base init             Initializes project in current folder
  8base init my-project  Creates new folder for initialized project"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'invoke' ]\`. 1`] = `
"COMMAND
  8base invoke <name> [OPTIONS]

DESCRIPTION
  Invokes a custom function in the production workspace.

POSITIONALS
  name  The name of the function  [string] [required]

OPTIONS
  -d, --debug      Turn on debug logs  [boolean]
  -h, --help       Show help  [boolean]
  -j, --data-json  Input JSON  [string]
  -p, --data-path  Path to input JSON  [string]
  -m, --mock       Name of the mock request  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'invoke' ]\`. 2`] = `
"COMMAND
  8base invoke <name> [OPTIONS]

DESCRIPTION
  Invokes a custom function in the production workspace.

POSITIONALS
  name  The name of the function  [string] [required]

OPTIONS
  -d, --debug      Turn on debug logs  [boolean]
  -h, --help       Show help  [boolean]
  -j, --data-json  Input JSON  [string]
  -p, --data-path  Path to input JSON  [string]
  -m, --mock       Name of the mock request  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'login' ]\`. 1`] = `
"COMMAND
  8base login [OPTIONS]

DESCRIPTION
  Authenticates the command line user by letting them log into an 8base account.

OPTIONS
  -d, --debug     Turn on debug logs  [boolean]
  -h, --help      Show help  [boolean]
  -e, --email     User email  [string]
  -p, --password  User password  [string]
  -t, --token     API Token  [string]

EXAMPLES
  8base login
  8base login -e my@email.com -p S3cretP@ssw0rd"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'logout' ]\`. 1`] = `
"COMMAND
  8base logout [OPTIONS]

DESCRIPTION
  Clears local login credentials and invalidates API session.

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'logs' ]\`. 1`] = `
"COMMAND
  8base logs <name> [OPTIONS]

DESCRIPTION
  Authenticates the command line user by letting them log into an 8base account.

POSITIONALS
  name  The name of the function  [string] [required]

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]
  -n, --num    Number of lines to display  [number] [default: 10]
  -t, --tail   Continually stream logs  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'migration' ]\`. 1`] = `
"8base migration <command>

Migration commands.

COMMANDS
  8base migration commit    Commits migrations and/or Custom Logic from your local project to 8base
  8base migration generate  Generates local migration files based on changes in your environment
  8base migration status    Displays migrations which can be committed to target environment

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'migration', 'commit' ]\`. 1`] = `
"COMMAND
  8base migration commit

DESCRIPTION
  Deploys migration files from your local 'migrations' directory and/or your Custom Logic to 8base server. You must be in the root directory of your 8base project to use this command.

OPTIONS
  -d, --debug        Turn on debug logs  [boolean]
  -h, --help         Show help  [boolean]
  -m, --mode         Commit mode.  [string] [choices: "FULL", "ONLY_MIGRATIONS", "ONLY_PROJECT"] [default: "FULL"]
  -f, --force        You can specify force flag to commit to master without prompt.  [boolean]
  -e, --environment  Specify the environment you want to commit.  [string]
  -t, --target       You can specify the necessary migration files.  [array]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'migration', 'generate' ]\`. 1`] = `
"COMMAND
  8base migration generate

DESCRIPTION
 Generates migration files based on changes in your environment to your local 'migrations' directory.

OPTIONS
  -d, --debug        Turn on debug logs  [boolean]
  -h, --help         Show help  [boolean]
      --dist         The folder of migrations  [string] [default: "./migrations"]
  -t, --tables       Specify table names to generate migrations for data.  [array]
  -e, --environment  Target environment  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'migration', 'status' ]\`. 1`] = `
"COMMAND
  8base migration status

DESCRIPTION
 Shows the difference between your local migration files and any migrations which have been already committed to target environment.

OPTIONS
  -d, --debug        Turn on debug logs  [boolean]
  -h, --help         Show help  [boolean]
  -e, --environment  Target environment  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`[ 'package' ]\`. 1`] = `
"COMMAND
  8base package [OPTIONS]

DESCRIPTION
  Package 8base application without deploying it.

OPTIONS
  -d, --debug  Turn on debug logs  [boolean]
  -h, --help   Show help  [boolean]"
`;
