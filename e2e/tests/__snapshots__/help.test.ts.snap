// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`As a user, I can use help flag for see help information about \`\`. 1`] = `
"DESCRIPTION
  The 8base Command Line Interface is a unified tool to manage your 8base workspaces services.

USAGE
  8base <command> [OPTIONS]

  Use 8base command \`--help\` for information on a specific command. Use 8base help topics to view a list of available help topics. The synopsis for each command shows it’s parameters and their usage. Optional options are shown in square brackets.

COMMANDS
  8base configure              Allows you to select a default workspace and retrieve the API endpoint URL.
  8base deploy                 Deploys project in current directory to 8base using 8base.yml config file. To use this command, you must be in the root directory of your 8base project.
  8base describe [name]        Describes your 8base project’s functions and their types through 8base.yml file.
  8base environment <command>  Environment commands.
  8base export                 Export current workspace data schema
  8base generate <command>     Generator for server and client side resources  [aliases: g]
  8base import                 Import 8base schema file and data to the current - or specified - workspace.
  8base init                   Initializes a new project with example directory structure and custom functions.
  8base invoke [name]          Invokes a custom function in the production workspace.
  8base invoke-local [name]    Invokes the custom function in the local development workspace.
  8base login                  Authenticates the command line user by letting them log into an 8base account.
  8base logout                 Clears local login credentials and invalidates API session.
  8base logs [name]            Show logs for the function(s).
  8base migration <command>    Migration commands.
  8base package                Package 8base application without deploying it.
  8base project <command>      Project-related commands.
  8base whoami                 Display the current authenticated user.

OPTIONS
  --version, -v  Show version number  [boolean]
  --debug, -d    Turn on debug logs  [boolean]
  --help, -h     Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`configure\`. 1`] = `
"COMMAND
  8base configure [OPTIONS]

DESCRIPTION
  Allows you to select a default workspace and retrieve the API endpoint URL.

OPTIONS
  --debug, -d        Turn on debug logs  [boolean]
  --help, -h         Show help  [boolean]
  --workspaceId, -w  The workspace ID of the project  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`deploy\`. 1`] = `
"COMMAND
  8base deploy [OPTIONS]

DESCRIPTION
  Deploys project in current directory to 8base using 8base.yml config file. To use this command, you must be in the root directory of your 8base project.

OPTIONS
  --debug, -d      Turn on debug logs  [boolean]
  --help, -h       Show help  [boolean]
  --plugins, -p    The list of plugins to deploy  [array]
  --functions, -f  The list of functions to deploy  [array]
  --mode, -m       The deploy mode  [string] [choices: \\"FULL\\", \\"ONLY_PLUGINS\\", \\"ONLY_PROJECT\\", \\"FUNCTIONS\\", \\"MIGRATIONS\\"] [default: \\"ONLY_PROJECT\\"]"
`;

exports[`As a user, I can use help flag for see help information about \`describe\`. 1`] = `
"COMMAND
  8base describe [OPTIONS]

DESCRIPTION
  Describes your 8base project’s functions and their types through 8base.yml file.

OPTIONS
  --debug, -d  Turn on debug logs  [boolean]
  --help, -h   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`export\`. 1`] = `
"COMMAND
  8base export [OPTIONS]

DESCRIPTION
  Export current - or specified - workspace data schema to a local file

OPTIONS
  --debug, -d      Turn on debug logs  [boolean]
  --help, -h       Show help  [boolean]
  --file, -f       Destination file  [string] [required]
  --workspace, -w  Custom workspace id  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`generate,app\`. 1`] = `
"8base generate app [PROJECT_NAME]

OPTIONS
  --debug, -d  Turn on debug logs  [boolean]
  --help, -h   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`generate,mock\`. 1`] = `
"Generator for a mock for the function.

OPTIONS
  --debug, -d     Turn on debug logs  [boolean]
  --help, -h      Show help  [boolean]
  --silent        Disable printing extra info to the console  [boolean] [default: false]
  --mockName, -m  Name of the mock request  [string] [default: \\"request\\"]"
`;

exports[`As a user, I can use help flag for see help information about \`generate,resolver\`. 1`] = `
"8base generate resolver [FUNCTION_NAME] [OPTIONS]

OPTIONS
  --debug, -d   Turn on debug logs  [boolean]
  --help, -h    Show help  [boolean]
  --mocks, -x   Included mocks dir and files  [boolean] [default: true]
  --syntax, -s  Syntax for the generated file  [string] [choices: \\"js\\", \\"ts\\"] [default: \\"ts\\"]
  --silent      Disable printing extra info to the console  [boolean] [default: false]"
`;

exports[`As a user, I can use help flag for see help information about \`generate,scaffold\`. 1`] = `
"8base generate scaffold [TABLE_NAME] [OPTIONS]

OPTIONS
  --debug, -d  Turn on debug logs  [boolean]
  --help, -h   Show help  [boolean]
  --depth      Depth of the generated query  [number] [default: 1]"
`;

exports[`As a user, I can use help flag for see help information about \`generate,task\`. 1`] = `
"8base generate task [FUNCTION_NAME] [OPTIONS]

OPTIONS
  --debug, -d        Turn on debug logs  [boolean]
  --help, -h         Show help  [boolean]
  --schedule, --sch  Schedule on which the task runs  [string]
  --mocks, -x        Included mocks dir and files  [boolean] [default: true]
  --syntax, -s       Syntax for the generated file  [string] [choices: \\"js\\", \\"ts\\"] [default: \\"ts\\"]
  --silent           Disable printing extra info to the console  [boolean] [default: false]"
`;

exports[`As a user, I can use help flag for see help information about \`generate,trigger\`. 1`] = `
"8base generate trigger [FUNCTION_NAME] [OPTIONS]

OPTIONS
  --debug, -d      Turn on debug logs  [boolean]
  --help, -h       Show help  [boolean]
  --type, -t       The trigger type  [string] [choices: \\"before\\", \\"after\\"]
  --operation, -o  Operation that invokes the trigger  [string]
  --mocks, -x      Included mocks dir and files  [boolean] [default: true]
  --syntax, -s     Syntax for the generated file  [string] [choices: \\"js\\", \\"ts\\"] [default: \\"ts\\"]
  --silent         Disable printing extra info to the console  [boolean] [default: false]"
`;

exports[`As a user, I can use help flag for see help information about \`generate,webhook\`. 1`] = `
"8base generate webhook [FUNCTION_NAME] [OPTIONS]

OPTIONS
  --debug, -d   Turn on debug logs  [boolean]
  --help, -h    Show help  [boolean]
  --path, -p    Path for the url (https:<endpoint>/<path>)  [string]
  --method, -m  HTTP verb to invoke the function  [string] [choices: \\"POST\\", \\"GET\\", \\"DELETE\\", \\"PUT\\"]
  --mocks, -x   Included mocks dir and files  [boolean] [default: true]
  --syntax, -s  Syntax for the generated file  [string] [choices: \\"js\\", \\"ts\\"] [default: \\"ts\\"]
  --silent      Disable printing extra info to the console  [boolean] [default: false]"
`;

exports[`As a user, I can use help flag for see help information about \`generate\`. 1`] = `
"8base generate <command>

Generator for server and client side resources

COMMANDS
  8base generate app <appName>         Generate an app skeleton for a specific framework (framework availability: react)
  8base generate mock <name>           8base generate mock [FUNCTION_NAME] [OPTIONS]
  8base generate plugin <name>         Generator for a plugin.
  8base generate resolver <name>       Generator for a custom resolver function.
  8base generate scaffold <tableName>  Generate CRUD screens for a table in a specific framework (framework availability: react)
  8base generate task <name>           Generator for a custom task function.
  8base generate trigger <name>        Generator for a custom trigger function.
  8base generate webhook <name>        Generator for a custom webhook function.

OPTIONS
  --debug, -d  Turn on debug logs  [boolean]
  --help, -h   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`import\`. 1`] = `
"COMMAND
  8base import [OPTIONS]

DESCRIPTION
  Import 8base schema file and data to the current - or specified - workspace.

OPTIONS
  --debug, -d      Turn on debug logs  [boolean]
  --help, -h       Show help  [boolean]
  --file, -f       Path to file with schema  [string] [required]
  --schema         Import schema  [boolean] [default: true]
  --data           Import data  [boolean] [default: true]
  --workspace, -w  Custom workspace id  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`init\`. 1`] = `
"COMMAND
  8base init [OPTIONS]

DESCRIPTION
  Initializes a new project with example directory structure and custom functions.

OPTIONS
  --debug, -d        Turn on debug logs  [boolean]
  --help, -h         Show help  [boolean]
  --functions, -f    List of functions  [array] [default: [\\"resolver:resolver\\",\\"task:task\\",\\"webhook:webhook\\",\\"trigger:trigger\\"]]
  --empty, -e        Skip examples  [boolean] [default: false]
  --mocks, -x        Included mocks dir and files  [boolean] [default: true]
  --syntax, -s       Syntax for the generated file  [string] [choices: \\"js\\", \\"ts\\"] [default: \\"ts\\"]
  --silent           Disable printing extra info to the console  [boolean] [default: false]
  --workspaceId, -w  The workspace ID of the project  [string]

EXAMPLES
  8base init             Initializes project in current folder
  8base init my-project  Creates new folder for initialized project"
`;

exports[`As a user, I can use help flag for see help information about \`invoke\`. 1`] = `
"COMMAND
  8base invoke [name] [OPTIONS]

DESCRIPTION
  Invokes a custom function in the production workspace.

Positionals:
  name  The name of the function  [string] [required]

OPTIONS
  --debug, -d      Turn on debug logs  [boolean]
  --help, -h       Show help  [boolean]
  --data-json, -j  Input JSON  [string]
  --data-path, -p  Path to input JSON  [string]
  --mock, -m       Name of the mock request  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`invoke\`. 2`] = `
"COMMAND
  8base invoke [name] [OPTIONS]

DESCRIPTION
  Invokes a custom function in the production workspace.

Positionals:
  name  The name of the function  [string] [required]

OPTIONS
  --debug, -d      Turn on debug logs  [boolean]
  --help, -h       Show help  [boolean]
  --data-json, -j  Input JSON  [string]
  --data-path, -p  Path to input JSON  [string]
  --mock, -m       Name of the mock request  [string]"
`;

exports[`As a user, I can use help flag for see help information about \`login\`. 1`] = `
"COMMAND
  8base login [OPTIONS]

DESCRIPTION
  Authenticates the command line user by letting them log into an 8base account.

OPTIONS
  --debug, -d     Turn on debug logs  [boolean]
  --help, -h      Show help  [boolean]
  --email, -e     User email  [string]
  --password, -p  User password  [string]
  --token, -t     API Token  [string]

EXAMPLES
  8base login
  8base login -e my@email.com -p S3cretP@ssw0rd"
`;

exports[`As a user, I can use help flag for see help information about \`logout\`. 1`] = `
"COMMAND
  8base logout [OPTIONS]

DESCRIPTION
  Clears local login credentials and invalidates API session.

OPTIONS
  --debug, -d  Turn on debug logs  [boolean]
  --help, -h   Show help  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`logs\`. 1`] = `
"COMMAND
  8base logs [name] [OPTIONS]

DESCRIPTION
  Authenticates the command line user by letting them log into an 8base account.

Positionals:
  name  The name of the function  [string] [required]

OPTIONS
  --debug, -d  Turn on debug logs  [boolean]
  --help, -h   Show help  [boolean]
  --num, -n    Number of lines to display  [number] [default: 10]
  --tail, -t   Continually stream logs  [boolean]"
`;

exports[`As a user, I can use help flag for see help information about \`package\`. 1`] = `
"COMMAND
  8base package [OPTIONS]

DESCRIPTION
  Package 8base application without deploying it.

OPTIONS
  --debug, -d  Turn on debug logs  [boolean]
  --help, -h   Show help  [boolean]"
`;
